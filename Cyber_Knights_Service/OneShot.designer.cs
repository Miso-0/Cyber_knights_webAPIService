#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cyber_Knights_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OneShotDB")]
	public partial class OneShotDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategoryTbl(CategoryTbl instance);
    partial void UpdateCategoryTbl(CategoryTbl instance);
    partial void DeleteCategoryTbl(CategoryTbl instance);
    partial void InsertColumnGraphData(ColumnGraphData instance);
    partial void UpdateColumnGraphData(ColumnGraphData instance);
    partial void DeleteColumnGraphData(ColumnGraphData instance);
    partial void InsertItemOnPromotion(ItemOnPromotion instance);
    partial void UpdateItemOnPromotion(ItemOnPromotion instance);
    partial void DeleteItemOnPromotion(ItemOnPromotion instance);
    partial void InsertLineGraphData(LineGraphData instance);
    partial void UpdateLineGraphData(LineGraphData instance);
    partial void DeleteLineGraphData(LineGraphData instance);
    partial void InsertPieChartData(PieChartData instance);
    partial void UpdatePieChartData(PieChartData instance);
    partial void DeletePieChartData(PieChartData instance);
    partial void InsertItemReview(ItemReview instance);
    partial void UpdateItemReview(ItemReview instance);
    partial void DeleteItemReview(ItemReview instance);
    partial void InsertCustomerList(CustomerList instance);
    partial void UpdateCustomerList(CustomerList instance);
    partial void DeleteCustomerList(CustomerList instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertonCart(onCart instance);
    partial void UpdateonCart(onCart instance);
    partial void DeleteonCart(onCart instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertItemsOnOrder(ItemsOnOrder instance);
    partial void UpdateItemsOnOrder(ItemsOnOrder instance);
    partial void DeleteItemsOnOrder(ItemsOnOrder instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertCustomerMessage(CustomerMessage instance);
    partial void UpdateCustomerMessage(CustomerMessage instance);
    partial void DeleteCustomerMessage(CustomerMessage instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertPromoCode(PromoCode instance);
    partial void UpdatePromoCode(PromoCode instance);
    partial void DeletePromoCode(PromoCode instance);
    #endregion
		
		public OneShotDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OneShotDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OneShotDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OneShotDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OneShotDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OneShotDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CategoryTbl> CategoryTbls
		{
			get
			{
				return this.GetTable<CategoryTbl>();
			}
		}
		
		public System.Data.Linq.Table<ColumnGraphData> ColumnGraphDatas
		{
			get
			{
				return this.GetTable<ColumnGraphData>();
			}
		}
		
		public System.Data.Linq.Table<ItemOnPromotion> ItemOnPromotions
		{
			get
			{
				return this.GetTable<ItemOnPromotion>();
			}
		}
		
		public System.Data.Linq.Table<LineGraphData> LineGraphDatas
		{
			get
			{
				return this.GetTable<LineGraphData>();
			}
		}
		
		public System.Data.Linq.Table<PieChartData> PieChartDatas
		{
			get
			{
				return this.GetTable<PieChartData>();
			}
		}
		
		public System.Data.Linq.Table<ItemReview> ItemReviews
		{
			get
			{
				return this.GetTable<ItemReview>();
			}
		}
		
		public System.Data.Linq.Table<CustomerList> CustomerLists
		{
			get
			{
				return this.GetTable<CustomerList>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<onCart> onCarts
		{
			get
			{
				return this.GetTable<onCart>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ItemsOnOrder> ItemsOnOrders
		{
			get
			{
				return this.GetTable<ItemsOnOrder>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<CustomerMessage> CustomerMessages
		{
			get
			{
				return this.GetTable<CustomerMessage>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<PromoCode> PromoCodes
		{
			get
			{
				return this.GetTable<PromoCode>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryTbl")]
	public partial class CategoryTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatID;
		
		private string _Cat_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnCat_NameChanging(string value);
    partial void OnCat_NameChanged();
    #endregion
		
		public CategoryTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Cat_Name
		{
			get
			{
				return this._Cat_Name;
			}
			set
			{
				if ((this._Cat_Name != value))
				{
					this.OnCat_NameChanging(value);
					this.SendPropertyChanging();
					this._Cat_Name = value;
					this.SendPropertyChanged("Cat_Name");
					this.OnCat_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColumnGraphData")]
	public partial class ColumnGraphData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Mon;
		
		private int _Visitors;
		
		private int _Registered;
		
		private int _Ordered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMonChanging(string value);
    partial void OnMonChanged();
    partial void OnVisitorsChanging(int value);
    partial void OnVisitorsChanged();
    partial void OnRegisteredChanging(int value);
    partial void OnRegisteredChanged();
    partial void OnOrderedChanging(int value);
    partial void OnOrderedChanged();
    #endregion
		
		public ColumnGraphData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mon", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Mon
		{
			get
			{
				return this._Mon;
			}
			set
			{
				if ((this._Mon != value))
				{
					this.OnMonChanging(value);
					this.SendPropertyChanging();
					this._Mon = value;
					this.SendPropertyChanged("Mon");
					this.OnMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visitors", DbType="Int NOT NULL")]
		public int Visitors
		{
			get
			{
				return this._Visitors;
			}
			set
			{
				if ((this._Visitors != value))
				{
					this.OnVisitorsChanging(value);
					this.SendPropertyChanging();
					this._Visitors = value;
					this.SendPropertyChanged("Visitors");
					this.OnVisitorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registered", DbType="Int NOT NULL")]
		public int Registered
		{
			get
			{
				return this._Registered;
			}
			set
			{
				if ((this._Registered != value))
				{
					this.OnRegisteredChanging(value);
					this.SendPropertyChanging();
					this._Registered = value;
					this.SendPropertyChanged("Registered");
					this.OnRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordered", DbType="Int NOT NULL")]
		public int Ordered
		{
			get
			{
				return this._Ordered;
			}
			set
			{
				if ((this._Ordered != value))
				{
					this.OnOrderedChanging(value);
					this.SendPropertyChanging();
					this._Ordered = value;
					this.SendPropertyChanged("Ordered");
					this.OnOrderedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemOnPromotion")]
	public partial class ItemOnPromotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Promotion_ID;
		
		private int _ItemCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotion_IDChanging(int value);
    partial void OnPromotion_IDChanged();
    partial void OnItemCodeChanging(int value);
    partial void OnItemCodeChanged();
    #endregion
		
		public ItemOnPromotion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Promotion_ID
		{
			get
			{
				return this._Promotion_ID;
			}
			set
			{
				if ((this._Promotion_ID != value))
				{
					this.OnPromotion_IDChanging(value);
					this.SendPropertyChanging();
					this._Promotion_ID = value;
					this.SendPropertyChanged("Promotion_ID");
					this.OnPromotion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineGraphData")]
	public partial class LineGraphData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Mon;
		
		private decimal _ExpenseAmount;
		
		private decimal _RevenuAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonChanging(string value);
    partial void OnMonChanged();
    partial void OnExpenseAmountChanging(decimal value);
    partial void OnExpenseAmountChanged();
    partial void OnRevenuAmountChanging(decimal value);
    partial void OnRevenuAmountChanged();
    #endregion
		
		public LineGraphData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mon", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Mon
		{
			get
			{
				return this._Mon;
			}
			set
			{
				if ((this._Mon != value))
				{
					this.OnMonChanging(value);
					this.SendPropertyChanging();
					this._Mon = value;
					this.SendPropertyChanged("Mon");
					this.OnMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal ExpenseAmount
		{
			get
			{
				return this._ExpenseAmount;
			}
			set
			{
				if ((this._ExpenseAmount != value))
				{
					this.OnExpenseAmountChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAmount = value;
					this.SendPropertyChanged("ExpenseAmount");
					this.OnExpenseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenuAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal RevenuAmount
		{
			get
			{
				return this._RevenuAmount;
			}
			set
			{
				if ((this._RevenuAmount != value))
				{
					this.OnRevenuAmountChanging(value);
					this.SendPropertyChanging();
					this._RevenuAmount = value;
					this.SendPropertyChanged("RevenuAmount");
					this.OnRevenuAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PieChartData")]
	public partial class PieChartData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dataId;
		
		private System.Nullable<int> _CatID;
		
		private int _SalePercentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndataIdChanging(int value);
    partial void OndataIdChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    partial void OnSalePercentageChanging(int value);
    partial void OnSalePercentageChanged();
    #endregion
		
		public PieChartData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dataId
		{
			get
			{
				return this._dataId;
			}
			set
			{
				if ((this._dataId != value))
				{
					this.OndataIdChanging(value);
					this.SendPropertyChanging();
					this._dataId = value;
					this.SendPropertyChanged("dataId");
					this.OndataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePercentage", DbType="Int NOT NULL")]
		public int SalePercentage
		{
			get
			{
				return this._SalePercentage;
			}
			set
			{
				if ((this._SalePercentage != value))
				{
					this.OnSalePercentageChanging(value);
					this.SendPropertyChanging();
					this._SalePercentage = value;
					this.SendPropertyChanged("SalePercentage");
					this.OnSalePercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemReviews")]
	public partial class ItemReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _revId;
		
		private string _UserName;
		
		private int _ItemCode;
		
		private string _review;
		
		private int _stars;
		
		private System.DateTime _ReviewDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrevIdChanging(int value);
    partial void OnrevIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnItemCodeChanging(int value);
    partial void OnItemCodeChanged();
    partial void OnreviewChanging(string value);
    partial void OnreviewChanged();
    partial void OnstarsChanging(int value);
    partial void OnstarsChanged();
    partial void OnReviewDateChanging(System.DateTime value);
    partial void OnReviewDateChanged();
    #endregion
		
		public ItemReview()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int revId
		{
			get
			{
				return this._revId;
			}
			set
			{
				if ((this._revId != value))
				{
					this.OnrevIdChanging(value);
					this.SendPropertyChanging();
					this._revId = value;
					this.SendPropertyChanged("revId");
					this.OnrevIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="Int NOT NULL")]
		public int ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string review
		{
			get
			{
				return this._review;
			}
			set
			{
				if ((this._review != value))
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stars", DbType="Int NOT NULL")]
		public int stars
		{
			get
			{
				return this._stars;
			}
			set
			{
				if ((this._stars != value))
				{
					this.OnstarsChanging(value);
					this.SendPropertyChanging();
					this._stars = value;
					this.SendPropertyChanged("stars");
					this.OnstarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewDate", DbType="Date NOT NULL")]
		public System.DateTime ReviewDate
		{
			get
			{
				return this._ReviewDate;
			}
			set
			{
				if ((this._ReviewDate != value))
				{
					this.OnReviewDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewDate = value;
					this.SendPropertyChanged("ReviewDate");
					this.OnReviewDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerList")]
	public partial class CustomerList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemCode;
		
		private string _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCodeChanging(int value);
    partial void OnItemCodeChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    #endregion
		
		public CustomerList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotions")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Promotion_ID;
		
		private string _Promotion_Name;
		
		private string _Promotion_Description;
		
		private System.DateTime _Promotion_StartDate;
		
		private System.DateTime _Promotion_EndDate;
		
		private string _PromotionStatus;
		
		private int _PromotioPercentageOFF;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotion_IDChanging(int value);
    partial void OnPromotion_IDChanged();
    partial void OnPromotion_NameChanging(string value);
    partial void OnPromotion_NameChanged();
    partial void OnPromotion_DescriptionChanging(string value);
    partial void OnPromotion_DescriptionChanged();
    partial void OnPromotion_StartDateChanging(System.DateTime value);
    partial void OnPromotion_StartDateChanged();
    partial void OnPromotion_EndDateChanging(System.DateTime value);
    partial void OnPromotion_EndDateChanged();
    partial void OnPromotionStatusChanging(string value);
    partial void OnPromotionStatusChanged();
    partial void OnPromotioPercentageOFFChanging(int value);
    partial void OnPromotioPercentageOFFChanged();
    #endregion
		
		public Promotion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Promotion_ID
		{
			get
			{
				return this._Promotion_ID;
			}
			set
			{
				if ((this._Promotion_ID != value))
				{
					this.OnPromotion_IDChanging(value);
					this.SendPropertyChanging();
					this._Promotion_ID = value;
					this.SendPropertyChanged("Promotion_ID");
					this.OnPromotion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Promotion_Name
		{
			get
			{
				return this._Promotion_Name;
			}
			set
			{
				if ((this._Promotion_Name != value))
				{
					this.OnPromotion_NameChanging(value);
					this.SendPropertyChanging();
					this._Promotion_Name = value;
					this.SendPropertyChanged("Promotion_Name");
					this.OnPromotion_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Promotion_Description
		{
			get
			{
				return this._Promotion_Description;
			}
			set
			{
				if ((this._Promotion_Description != value))
				{
					this.OnPromotion_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Promotion_Description = value;
					this.SendPropertyChanged("Promotion_Description");
					this.OnPromotion_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_StartDate", DbType="Date NOT NULL")]
		public System.DateTime Promotion_StartDate
		{
			get
			{
				return this._Promotion_StartDate;
			}
			set
			{
				if ((this._Promotion_StartDate != value))
				{
					this.OnPromotion_StartDateChanging(value);
					this.SendPropertyChanging();
					this._Promotion_StartDate = value;
					this.SendPropertyChanged("Promotion_StartDate");
					this.OnPromotion_StartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotion_EndDate", DbType="Date NOT NULL")]
		public System.DateTime Promotion_EndDate
		{
			get
			{
				return this._Promotion_EndDate;
			}
			set
			{
				if ((this._Promotion_EndDate != value))
				{
					this.OnPromotion_EndDateChanging(value);
					this.SendPropertyChanging();
					this._Promotion_EndDate = value;
					this.SendPropertyChanged("Promotion_EndDate");
					this.OnPromotion_EndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PromotionStatus
		{
			get
			{
				return this._PromotionStatus;
			}
			set
			{
				if ((this._PromotionStatus != value))
				{
					this.OnPromotionStatusChanging(value);
					this.SendPropertyChanging();
					this._PromotionStatus = value;
					this.SendPropertyChanged("PromotionStatus");
					this.OnPromotionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotioPercentageOFF", DbType="Int NOT NULL")]
		public int PromotioPercentageOFF
		{
			get
			{
				return this._PromotioPercentageOFF;
			}
			set
			{
				if ((this._PromotioPercentageOFF != value))
				{
					this.OnPromotioPercentageOFFChanging(value);
					this.SendPropertyChanging();
					this._PromotioPercentageOFF = value;
					this.SendPropertyChanged("PromotioPercentageOFF");
					this.OnPromotioPercentageOFFChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemCode;
		
		private string _ItemName;
		
		private decimal _ItemPrice;
		
		private int _CatID;
		
		private string _ItemDescription;
		
		private int _ItemQuantity;
		
		private int _ItemAvailableQTY;
		
		private string _ItemImageUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCodeChanging(int value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemPriceChanging(decimal value);
    partial void OnItemPriceChanged();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnItemQuantityChanging(int value);
    partial void OnItemQuantityChanged();
    partial void OnItemAvailableQTYChanging(int value);
    partial void OnItemAvailableQTYChanged();
    partial void OnItemImageUrlChanging(string value);
    partial void OnItemImageUrlChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this.OnItemPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemPrice = value;
					this.SendPropertyChanged("ItemPrice");
					this.OnItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int NOT NULL")]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQuantity", DbType="Int NOT NULL")]
		public int ItemQuantity
		{
			get
			{
				return this._ItemQuantity;
			}
			set
			{
				if ((this._ItemQuantity != value))
				{
					this.OnItemQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemQuantity = value;
					this.SendPropertyChanged("ItemQuantity");
					this.OnItemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemAvailableQTY", DbType="Int NOT NULL")]
		public int ItemAvailableQTY
		{
			get
			{
				return this._ItemAvailableQTY;
			}
			set
			{
				if ((this._ItemAvailableQTY != value))
				{
					this.OnItemAvailableQTYChanging(value);
					this.SendPropertyChanging();
					this._ItemAvailableQTY = value;
					this.SendPropertyChanged("ItemAvailableQTY");
					this.OnItemAvailableQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemImageUrl", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ItemImageUrl
		{
			get
			{
				return this._ItemImageUrl;
			}
			set
			{
				if ((this._ItemImageUrl != value))
				{
					this.OnItemImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ItemImageUrl = value;
					this.SendPropertyChanged("ItemImageUrl");
					this.OnItemImageUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.onCart")]
	public partial class onCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemCode;
		
		private string _UserID;
		
		private int _qty;
		
		private decimal _itemTotalPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCodeChanging(int value);
    partial void OnItemCodeChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnqtyChanging(int value);
    partial void OnqtyChanged();
    partial void OnitemTotalPriceChanging(decimal value);
    partial void OnitemTotalPriceChanged();
    #endregion
		
		public onCart()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int NOT NULL")]
		public int qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemTotalPrice", DbType="Money NOT NULL")]
		public decimal itemTotalPrice
		{
			get
			{
				return this._itemTotalPrice;
			}
			set
			{
				if ((this._itemTotalPrice != value))
				{
					this.OnitemTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._itemTotalPrice = value;
					this.SendPropertyChanged("itemTotalPrice");
					this.OnitemTotalPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _FiratName;
		
		private string _LastName;
		
		private string _UserEmail;
		
		private string _UserContact;
		
		private string _UserCity;
		
		private string _UserAddress;
		
		private string _UserPassword;
		
		private string _UserType;
		
		private System.DateTime _DateRegistered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnFiratNameChanging(string value);
    partial void OnFiratNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserContactChanging(string value);
    partial void OnUserContactChanged();
    partial void OnUserCityChanging(string value);
    partial void OnUserCityChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnDateRegisteredChanging(System.DateTime value);
    partial void OnDateRegisteredChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiratName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FiratName
		{
			get
			{
				return this._FiratName;
			}
			set
			{
				if ((this._FiratName != value))
				{
					this.OnFiratNameChanging(value);
					this.SendPropertyChanging();
					this._FiratName = value;
					this.SendPropertyChanged("FiratName");
					this.OnFiratNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserContact", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string UserContact
		{
			get
			{
				return this._UserContact;
			}
			set
			{
				if ((this._UserContact != value))
				{
					this.OnUserContactChanging(value);
					this.SendPropertyChanging();
					this._UserContact = value;
					this.SendPropertyChanged("UserContact");
					this.OnUserContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UserCity
		{
			get
			{
				return this._UserCity;
			}
			set
			{
				if ((this._UserCity != value))
				{
					this.OnUserCityChanging(value);
					this.SendPropertyChanging();
					this._UserCity = value;
					this.SendPropertyChanged("UserCity");
					this.OnUserCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistered", DbType="Date NOT NULL")]
		public System.DateTime DateRegistered
		{
			get
			{
				return this._DateRegistered;
			}
			set
			{
				if ((this._DateRegistered != value))
				{
					this.OnDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistered = value;
					this.SendPropertyChanged("DateRegistered");
					this.OnDateRegisteredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemsOnOrder")]
	public partial class ItemsOnOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemCode;
		
		private string _OrderID;
		
		private int _itemQTY;
		
		private decimal _ItemTotalPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCodeChanging(int value);
    partial void OnItemCodeChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnitemQTYChanging(int value);
    partial void OnitemQTYChanged();
    partial void OnItemTotalPriceChanging(decimal value);
    partial void OnItemTotalPriceChanged();
    #endregion
		
		public ItemsOnOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Char(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemQTY", DbType="Int NOT NULL")]
		public int itemQTY
		{
			get
			{
				return this._itemQTY;
			}
			set
			{
				if ((this._itemQTY != value))
				{
					this.OnitemQTYChanging(value);
					this.SendPropertyChanging();
					this._itemQTY = value;
					this.SendPropertyChanged("itemQTY");
					this.OnitemQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTotalPrice", DbType="Money NOT NULL")]
		public decimal ItemTotalPrice
		{
			get
			{
				return this._ItemTotalPrice;
			}
			set
			{
				if ((this._ItemTotalPrice != value))
				{
					this.OnItemTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemTotalPrice = value;
					this.SendPropertyChanged("ItemTotalPrice");
					this.OnItemTotalPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderID;
		
		private string _UserID;
		
		private System.DateTime _OrderDate;
		
		private string _OrderEstDate;
		
		private string _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnOrderEstDateChanging(string value);
    partial void OnOrderEstDateChanged();
    partial void OnOrderStatusChanging(string value);
    partial void OnOrderStatusChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Char(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(13) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="Date NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEstDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderEstDate
		{
			get
			{
				return this._OrderEstDate;
			}
			set
			{
				if ((this._OrderEstDate != value))
				{
					this.OnOrderEstDateChanging(value);
					this.SendPropertyChanging();
					this._OrderEstDate = value;
					this.SendPropertyChanged("OrderEstDate");
					this.OnOrderEstDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerMessage")]
	public partial class CustomerMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private string _UserID;
		
		private string _MessageText;
		
		private System.DateTime _MessageDate;
		
		private string _MessageStatus;
		
		private string _Sender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnMessageDateChanging(System.DateTime value);
    partial void OnMessageDateChanged();
    partial void OnMessageStatusChanging(string value);
    partial void OnMessageStatusChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    #endregion
		
		public CustomerMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageDate", DbType="DateTime NOT NULL")]
		public System.DateTime MessageDate
		{
			get
			{
				return this._MessageDate;
			}
			set
			{
				if ((this._MessageDate != value))
				{
					this.OnMessageDateChanging(value);
					this.SendPropertyChanging();
					this._MessageDate = value;
					this.SendPropertyChanged("MessageDate");
					this.OnMessageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageStatus
		{
			get
			{
				return this._MessageStatus;
			}
			set
			{
				if ((this._MessageStatus != value))
				{
					this.OnMessageStatusChanging(value);
					this.SendPropertyChanging();
					this._MessageStatus = value;
					this.SendPropertyChanged("MessageStatus");
					this.OnMessageStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionId;
		
		private string _OrderID;
		
		private string _TransactionRecipt;
		
		private int _NumberOfItems;
		
		private string _TransactionDate;
		
		private decimal _TransactionAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnTransactionReciptChanging(string value);
    partial void OnTransactionReciptChanged();
    partial void OnNumberOfItemsChanging(int value);
    partial void OnNumberOfItemsChanged();
    partial void OnTransactionDateChanging(string value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionAmountChanging(decimal value);
    partial void OnTransactionAmountChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Char(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionRecipt", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TransactionRecipt
		{
			get
			{
				return this._TransactionRecipt;
			}
			set
			{
				if ((this._TransactionRecipt != value))
				{
					this.OnTransactionReciptChanging(value);
					this.SendPropertyChanging();
					this._TransactionRecipt = value;
					this.SendPropertyChanged("TransactionRecipt");
					this.OnTransactionReciptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfItems", DbType="Int NOT NULL")]
		public int NumberOfItems
		{
			get
			{
				return this._NumberOfItems;
			}
			set
			{
				if ((this._NumberOfItems != value))
				{
					this.OnNumberOfItemsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfItems = value;
					this.SendPropertyChanged("NumberOfItems");
					this.OnNumberOfItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="Money NOT NULL")]
		public decimal TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromoCodes")]
	public partial class PromoCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _code;
		
		private int _DiscountPercent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnDiscountPercentChanging(int value);
    partial void OnDiscountPercentChanged();
    #endregion
		
		public PromoCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercent", DbType="Int NOT NULL")]
		public int DiscountPercent
		{
			get
			{
				return this._DiscountPercent;
			}
			set
			{
				if ((this._DiscountPercent != value))
				{
					this.OnDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercent = value;
					this.SendPropertyChanged("DiscountPercent");
					this.OnDiscountPercentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
